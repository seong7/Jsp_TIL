/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2019-11-11 07:26:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch07_002dbeans;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class simpleBean2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

		request.setCharacterEncoding("EUC-KR");
		

      out.write("\r\n");
      out.write("<!-- SimpleBean 객체 생성 -->\r\n");
      ch07_beans.SimpleBean bean = null;
      bean = (ch07_beans.SimpleBean) _jspx_page_context.getAttribute("bean", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (bean == null){
        bean = new ch07_beans.SimpleBean();
        _jspx_page_context.setAttribute("bean", bean, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("<!-- SimpleBean bean = new SimpleBean();  위와 같은 코드 (use bean 이라는 action tag 임) -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- client request 의 값 (msg) 을 받아 빈즈에 저장하는 코드 : -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("bean"), "msg", request.getParameter("msg"), request, "msg", false);
      out.write("\r\n");
      out.write("<!-- (위 아래 같은 코드)\r\n");
      out.write("\r\n");
      out.write("\t  * String msg = request.getParameter(\"msg\");\r\n");
      out.write("\t  * bean.setMsg(msg); \r\n");
      out.write("\t  \r\n");
      out.write("\t  * 즉, setProperty 태그 :: msg 값 받아오고 setter 실행까지 한번에 할 수 있게 함\r\n");
      out.write("\t  \r\n");
      out.write("\t  **** tip\r\n");
      out.write("\t  - property = \"*\"   로 표시해주면 페이지 내의 모든 값을 위의 프로세스로 bean에 저장함.\r\n");
      out.write("\t     **단, html form의 input 태그 name 과 bean 의 field 명이 동일해야만 함 !!!!!!  -->\r\n");
      out.write("\t  \r\n");
      out.write("msg2 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((ch07_beans.SimpleBean)_jspx_page_context.findAttribute("bean")).getMsg())));
      out.write("<br/>\r\n");
      out.write("<!-- (위 아래 같은 코드)\r\n");
      out.write("\r\n");
      out.write("\t\t * ");
      out.print(bean.getMsg());
      out.write("\r\n");
      out.write("bean에서 property의 값을 받아와 expression 식을 실행시킴 (출력)\r\n");
      out.write("        -->\r\n");
      out.write("\r\n");
      out.write("cnt2 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((ch07_beans.SimpleBean)_jspx_page_context.findAttribute("bean")).getCnt())));
      out.write("<br/>\r\n");
      out.write("msg2 : ");
      out.print(bean.getMsg());
      out.write("<br/>\r\n");
      out.write("cnt2 : ");
      out.print(bean.getCnt());
      out.write("<br/>\r\n");
      out.write("<!--  getPreperty 액션태그는  \"*\" 사용이 불가능함 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
